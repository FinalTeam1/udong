<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="clubMapper">

    <resultMap id="clubResultMap" type="com.multi.udong.club.model.dto.ClubDTO">

        <id property="clubNo" column="club_no"/>

        <result property="clubName" column="club_name"/>
        <result property="introduction" column="introduction"/>
        <result property="currentPersonnel" column="current_personnel"/>
        <result property="maxPersonnel" column="max_personnel"/>
        <result property="chatroomCode" column="chatroom_code"/>
        <result property="createdAt" column="created_at"/>
        <result property="modifiedAt" column="modified_at"/>
        <result property="joinStatus" column="join_status"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="deletedAt" column="deleted_at"/>
        <result property="joinRequestCount" column="join_request_count"/>

        <association property="category" resultMap="categoryResultMap"/>
        <association property="location" resultMap="locationResultMap"/>
        <association property="master" resultMap="masterResultMap"/>

        <collection property="attachment" resultMap="attachmentResultMap"/>
        <collection property="clubMember" resultMap="clubMemberResultMap"/>

    </resultMap>
    
    <resultMap id="categoryResultMap" type="categoryDTO">

        <id property="categoryCode" column="category_code"/>
        <result property="categoryName" column="category_name"/>

    </resultMap>

    <resultMap id="locationResultMap" type="com.multi.udong.common.model.dto.LocationDTO">

        <id property="locationCode" column="location_code"/>
        <result property="siDoName" column="si_do_name"/>
        <result property="siGunGuName" column="si_gun_gu_name"/>
        <result property="eupMyeonDongName" column="eup_myeon_dong_name"/>

    </resultMap>

    <resultMap id="masterResultMap" type="com.multi.udong.club.model.dto.ClubMemberDTO">

        <id property="memberNo" column="master"/>
        <result property="nickname" column="master_nickname"/>
        <result property="profileSavedName" column="master_profile_saved_name"/>

    </resultMap>

    <resultMap id="attachmentResultMap" type="com.multi.udong.common.model.dto.AttachmentDTO">

        <id property="fileNo" column="file_no"/>
        <result property="typeCode" column="type_code"/>
        <result property="targetNo" column="target_no"/>
        <result property="originalName" column="original_name"/>
        <result property="savedName" column="saved_name"/>

    </resultMap>

    <resultMap id="clubMemberResultMap" type="com.multi.udong.club.model.dto.ClubMemberDTO">

        <id property="clubNo" column="member_club_no"/>
        <id property="memberNo" column="member_no"/>
        <result property="nickname" column="nickname"/>
        <result property="profileSavedName" column="profile_saved_name"/>
        <result property="appliedAt" column="applied_at"/>
        <result property="approvedAt" column="approved_at"/>

    </resultMap>

    <resultMap id="logResultMap" type="com.multi.udong.club.model.dto.LogDTO">

        <id property="logNo" column="log_no"/>

        <result property="clubNo" column="club_no"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="views" column="views"/>
        <result property="createdAt" column="created_at"/>
        <result property="modifiedAt" column="modified_at"/>
        <result property="repliesCount" column="replies_count"/>
        <result property="likesCount" column="likes_count"/>
        <result property="viewerLike" column="viewer_log_like"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="deletedAt" column="deleted_at"/>

        <association property="writer" resultMap="logWriterResultMap"/>

        <collection property="attachments" resultMap="attachmentResultMap"/>
        <collection property="likes" resultMap="logLikeResultMap"/>
        <collection property="replies" resultMap="logReplyResultMap"/>

    </resultMap>

    <resultMap id="logWriterResultMap" type="com.multi.udong.club.model.dto.ClubMemberDTO">

        <id property="memberNo" column="log_writer"/>
        <result property="nickname" column="log_writer_nickname"/>
        <result property="profileSavedName" column="profile_saved_name"/>

    </resultMap>

    <resultMap id="logLikeResultMap" type="com.multi.udong.club.model.dto.LikeDTO">

        <id property="logNo" column="liked_log_no"/>
        <id property="memberNo" column="log_like_member_no"/>
        <result property="likedAt" column="log_liked_at"/>

    </resultMap>

    <resultMap id="logReplyResultMap" type="com.multi.udong.club.model.dto.ReplyDTO">

        <id property="replyNo" column="reply_no"/>

        <result property="logNo" column="replied_log_no"/>
        <result property="content" column="reply_content"/>
        <result property="createdAt" column="reply_created_at"/>
        <result property="modifiedAt" column="reply_modified_at"/>
        <result property="viewerLike" column="viewer_reply_like"/>
        <result property="likesCount" column="reply_likes_count"/>

        <association property="writer" resultMap="replyWriterResultMap"/>

        <collection property="likes" resultMap="replyLikeResultMap"/>

    </resultMap>

    <resultMap id="replyWriterResultMap" type="com.multi.udong.club.model.dto.ClubMemberDTO">

        <id property="memberNo" column="reply_writer"/>
        <result property="nickname" column="reply_writer_nickname"/>

    </resultMap>

    <resultMap id="replyLikeResultMap" type="com.multi.udong.club.model.dto.LikeDTO">

        <id property="replyNo" column="liked_reply_no"/>
        <id property="memberNo" column="reply_like_member_no"/>
        <result property="likedAt" column="reply_liked_at"/>

    </resultMap>

    <resultMap id="scheduleResultMap" type="com.multi.udong.club.model.dto.ScheduleDTO">

        <id property="scheduleNo" column="schedule_no"/>

        <result property="clubNo" column="club_no"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="currentPersonnel" column="current_personnel"/>
        <result property="maxPersonnel" column="max_personnel"/>
        <result property="gatheringAt" column="gathering_at"/>
        <result property="createdAt" column="created_at"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="deletedAt" column="deleted_at"/>
        <result property="viewerJoin" column="viewer_join"/>
        
        <association property="maker" resultMap="scheduleMakerResultMap"/>
        
        <collection property="participants" resultMap="scheduleParticipantResultMap"/>

    </resultMap>

    <resultMap id="scheduleMakerResultMap" type="com.multi.udong.club.model.dto.ClubMemberDTO">

        <id property="memberNo" column="maker"/>
        <result property="nickname" column="maker_nickname"/>
        <result property="profileSavedName" column="maker_profile_saved_name"/>

    </resultMap>

    <resultMap id="scheduleParticipantResultMap" type="com.multi.udong.club.model.dto.ClubMemberDTO">

        <id property="memberNo" column="participant"/>
        <result property="nickname" column="participant_nickname"/>
        <result property="profileSavedName" column="participant_profile_saved_name"/>

    </resultMap>

    <resultMap id="outputChatMessageResultMap" type="com.multi.udong.club.model.dto.OutputChatMessage">

        <id property="chatNo" column="chat_no"/>
        <result property="clubNo" column="club_no"/>
        <result property="senderNo" column="sender_no"/>
        <result property="sender" column="nickname"/>
        <result property="profileSavedName" column="profile_saved_name"/>
        <result property="content" column="content"/>
        <result property="type" column="type"/>
        <result property="sentAt" column="sent_at"/>

    </resultMap>



    <select id="selectCategoryList" resultMap="categoryResultMap">
        SELECT
        A.category_code,
        A.category_name
        FROM CL_CATEGORY A
        ORDER BY
            CASE
                WHEN category_code = 'ETC' THEN 1
                ELSE 0
            END,
        category_code;
    </select>

    <insert id="insertClub" parameterType="com.multi.udong.club.model.dto.ClubDTO" useGeneratedKeys="true" keyProperty="clubNo">
        INSERT INTO CL
            (category_code, location_code, club_name, introduction, master, max_personnel)
        VALUES
            (
            #{ category.categoryCode },
            #{ location.locationCode },
            #{ clubName },
            #{ introduction },
            #{ master.memberNo },
            #{ maxPersonnel }
        )
    </insert>

    <insert id="insertClubImg" parameterType="com.multi.udong.common.model.dto.AttachmentDTO">
        INSERT INTO ATTACHMENT
        (type_code, target_no, original_name, saved_name)
        VALUES
        (
        #{ typeCode },
        #{ targetNo },
        #{ originalName },
        #{ savedName }
        )
    </insert>

    <update id="updateChatroomCode" parameterType="com.multi.udong.club.model.dto.ClubDTO">
        UPDATE CL
        SET chatroom_code = #{ chatroomCode }
        WHERE club_no = #{ clubNo }
    </update>

    <insert id="insertMaster" parameterType="com.multi.udong.club.model.dto.ClubDTO">
        INSERT INTO CL_MEMBER
        (club_no, member_no, join_status, approved_at)
        VALUES
        (
        #{ clubNo },
        #{ master.memberNo },
        'Y',
        NOW()
        )
    </insert>

    <select id="selectClubList" parameterType="com.multi.udong.club.model.dto.FilterDTO" resultMap="clubResultMap">
        SELECT
            A.club_no,
            A.club_name,
            A.introduction,
            A.max_personnel,
            B.category_name,
            C.eup_myeon_dong_name,
            (SELECT COUNT(*) FROM CL_MEMBER D WHERE D.club_no = A.club_no AND D.join_status = 'Y') AS current_personnel,
            (SELECT E.saved_name FROM ATTACHMENT E WHERE E.type_code = 'CL' AND E.target_no = A.club_no) AS saved_name
        FROM CL A
        LEFT JOIN CL_CATEGORY B ON A.category_code = B.category_code
        LEFT JOIN LOCATION C ON A.location_code = C.location_code
        WHERE A.location_code = #{ locationCode } AND A.is_deleted = 'N'
        <if test="categoryCode != 'ALL' and categoryCode != null and categoryCode != ''">
            AND A.category_code = #{ categoryCode }
        </if>
        <if test="searchWord != null and searchWord != ''">
            AND (
                A.club_name LIKE CONCAT('%', #{ searchWord }, '%')
                OR A.introduction LIKE CONCAT('%', #{ searchWord }, '%')
            )
        </if>
        ORDER BY current_personnel DESC, A.created_at
        LIMIT #{ startIndex }, #{ pageCount }
    </select>

    <select id="selectClubCount" parameterType="com.multi.udong.club.model.dto.FilterDTO" resultType="Integer">
        SELECT COUNT(*) club_count FROM CL
        WHERE location_code = #{ locationCode } AND is_deleted = 'N'
        <if test="categoryCode != 'ALL' and categoryCode != null and categoryCode != ''">
            AND category_code = #{ categoryCode }
        </if>
        <if test="searchWord != null and searchWord != ''">
            AND (
                club_name LIKE CONCAT('%', #{ searchWord }, '%')
                OR introduction LIKE CONCAT('%', #{ searchWord }, '%')
            )
        </if>
    </select>

    <select id="selectClubHome" parameterType="com.multi.udong.club.model.dto.RequestDTO" resultMap="clubResultMap">
        SELECT
            A.*,
            B.category_name,
            C.*,
            (SELECT D.nickname FROM MEMBER D WHERE D.member_no = A.master) AS master_nickname,
            (SELECT COUNT(*) FROM CL_MEMBER E WHERE E.club_no = A.club_no AND E.join_status = 'Y') AS current_personnel,
            (SELECT COUNT(*) FROM CL_MEMBER E WHERE E.club_no = A.club_no AND E.join_status = 'W') AS join_request_count,
            (SELECT E.join_status FROM CL_MEMBER E WHERE E.club_no = A.club_no AND E.member_no = #{ memberNo }) AS join_status,
            F.*
        FROM CL A
        LEFT JOIN CL_CATEGORY B ON A.category_code = B.category_code
        LEFT JOIN LOCATION C ON A.location_code = C.location_code
        LEFT JOIN ATTACHMENT F ON 'CL' = F.type_code AND A.club_no = F.target_no
        WHERE A.club_no = #{ clubNo }
    </select>

    <insert id="requestJoinClub" parameterType="com.multi.udong.club.model.dto.RequestDTO">
        INSERT INTO CL_MEMBER
            (club_no, member_no)
        VALUES
            (
            #{ clubNo },
            #{ memberNo }
            )
    </insert>

    <select id="checkJoinStatus" parameterType="com.multi.udong.club.model.dto.RequestDTO" resultType="String">
        SELECT join_status
        FROM CL_MEMBER
        WHERE club_no = #{ clubNo } AND member_no = #{ memberNo }
    </select>

    <select id="checkPersonnel" parameterType="Integer" resultMap="clubResultMap">
        SELECT
            A.max_personnel,
            (SELECT COUNT(*) FROM CL_MEMBER B WHERE B.club_no = A.club_no AND B.join_status = 'Y') AS current_personnel
        FROM CL A
        WHERE club_no = #{ clubNo }
    </select>

    <select id="checkClubMaster" parameterType="Integer" resultType="Integer">
        SELECT master
        FROM CL
        WHERE club_no = #{ clubNo }
    </select>

    <delete id="cancelJoinRequest" parameterType="com.multi.udong.club.model.dto.RequestDTO">
        DELETE FROM CL_MEMBER
        WHERE club_no = #{ clubNo } AND member_no = #{ memberNo } AND join_status = 'W'
    </delete>

    <delete id="leaveClub" parameterType="com.multi.udong.club.model.dto.RequestDTO">
        DELETE FROM CL_MEMBER
        WHERE club_no = #{ clubNo } AND member_no = #{ memberNo } AND join_status = 'Y'
    </delete>

    <update id="deleteClub" parameterType="com.multi.udong.club.model.dto.RequestDTO">
        UPDATE CL
        SET
            is_deleted = 'Y',
            deleted_at = NOW()
        WHERE club_no = #{ clubNo }
    </update>

    <delete id="deleteClubImg" parameterType="Integer">
        DELETE FROM ATTACHMENT
        WHERE type_code = 'CL' AND target_no = #{ clubNo }
    </delete>

    <insert id="report" parameterType="com.multi.udong.club.model.dto.ReportDTO">
        INSERT INTO ADM_REPORT
            (type_code, reported_no, reported_member, reporter_member, reason, url)
        VALUES
            (
            #{ typeCode },
            #{ reportedNo },
            #{ reportedMember },
            #{ reporterMember },
            #{ reason },
            #{ url }
            )
    </insert>

    <update id="updateClub" parameterType="com.multi.udong.club.model.dto.ClubDTO">
        UPDATE CL
        SET
            category_code = #{ category.categoryCode },
            club_name = #{ clubName },
            introduction = #{ introduction },
            modified_at = NOW()
        WHERE club_no = #{ clubNo }
    </update>

    <update id="updateClubImg" parameterType="com.multi.udong.common.model.dto.AttachmentDTO">
        UPDATE ATTACHMENT
        SET
            original_name = #{ originalName },
            saved_name = #{ savedName }
        WHERE type_code = 'CL' AND target_no = #{ targetNo }
    </update>

    <select id="selectClubImg" parameterType="Integer" resultMap="attachmentResultMap">
        SELECT *
        FROM ATTACHMENT
        WHERE type_code = 'CL' AND target_no = #{ clubNo }
    </select>

    <insert id="insertLog" parameterType="com.multi.udong.club.model.dto.LogDTO" useGeneratedKeys="true" keyProperty="logNo">
        INSERT INTO CL_LOG
            (club_no, title, content, writer)
        VALUES
            (
            #{ clubNo },
            #{ title },
            #{ content },
            #{ writer.memberNo }
            )
    </insert>

    <insert id="insertLogImg" parameterType="com.multi.udong.common.model.dto.AttachmentDTO">
        INSERT INTO ATTACHMENT
            (type_code, target_no, original_name, saved_name)
        VALUES
            (
            #{ typeCode },
            #{ targetNo },
            #{ originalName },
            #{ savedName }
            )
    </insert>

    <select id="selectLogList" parameterType="com.multi.udong.club.model.dto.FilterDTO" resultMap="logResultMap">
        SELECT
        A.log_no,
        A.club_no,
        A.title,
        A.content,
        A.views,
        A.created_at,
        B.nickname AS log_writer_nickname,
        (SELECT COUNT(*) FROM CL_LOG_LIKE C WHERE C.log_no = A.log_no) AS likes_count,
        (SELECT COUNT(*) FROM CL_LOG_REPLY D WHERE D.log_no = A.log_no) AS replies_count,
        (SELECT E.saved_name FROM ATTACHMENT E WHERE E.type_code = 'CL-LOG' AND E.target_no = A.log_no ORDER BY E.file_no LIMIT 1) AS saved_name
        FROM CL_LOG A
        LEFT JOIN MEMBER B ON A.writer = B.member_no
        WHERE A.club_no = #{ clubNo } AND A.is_deleted = 'N'
        <if test="searchWord != null and searchWord != ''">
            AND (
                A.title LIKE CONCAT('%', #{ searchWord }, '%')
                OR A.content LIKE CONCAT('%', #{ searchWord }, '%')
            )
        </if>
        ORDER BY A.created_at DESC
        LIMIT #{ startIndex }, #{ pageCount }
    </select>

    <select id="selectLogCount" parameterType="com.multi.udong.club.model.dto.FilterDTO" resultType="Integer">
        SELECT COUNT(*) log_count FROM CL_LOG
        WHERE club_no = #{ clubNo } AND is_deleted = 'N'
        <if test="searchWord != null and searchWord != ''">
            AND (
                title LIKE CONCAT('%', #{ searchWord }, '%')
                OR content LIKE CONCAT('%', #{ searchWord }, '%')
            )
        </if>
    </select>

    <select id="selectLogDetail" parameterType="com.multi.udong.club.model.dto.RequestDTO" resultMap="logResultMap">
        SELECT
            A.log_no,
            A.club_no,
            A.title,
            A.content,
            A.views,
            A.created_at,
            A.modified_at,
            A.is_deleted,
            A.deleted_at,
            A.writer AS log_writer,
            B.nickname AS log_writer_nickname,
            C.reply_no,
            C.log_no AS replied_log_no,
            C.content AS reply_content,
            C.writer AS reply_writer,
            C.created_at AS reply_created_at,
            C.modified_at AS reply_modified_at,
            (SELECT nickname FROM MEMBER B WHERE B.member_no = C.writer) AS reply_writer_nickname,
            (SELECT COUNT(*) FROM CL_LOG_LIKE C WHERE C.log_no = A.log_no) AS likes_count,
            (SELECT COUNT(*) FROM CL_LOG_LIKE C WHERE C.log_no = A.log_no AND C.member_no = #{ memberNo }) AS viewer_log_like,
            (SELECT COUNT(*) FROM CL_LOG_REPLY D WHERE D.log_no = A.log_no) AS replies_count,
            E.*,
            (SELECT COUNT(*) FROM CL_LOG_REPLY_LIKE F WHERE F.reply_no = C.reply_no AND F.member_no = #{ memberNo }) AS viewer_reply_like,
            (SELECT COUNT(*) FROM CL_LOG_REPLY_LIKE F WHERE F.reply_no = C.reply_no) AS reply_likes_count,
            (SELECT saved_name FROM ATTACHMENT E WHERE E.type_code = 'MEM' AND E.target_no = log_writer) AS profile_saved_name
        FROM CL_LOG A
        LEFT JOIN MEMBER B ON A.writer = B.member_no
        LEFT JOIN CL_LOG_REPLY C ON A.log_no = C.log_no
        LEFT JOIN ATTACHMENT E ON E.type_code = 'CL-LOG' AND A.log_no = E.target_no
        WHERE A.log_no = #{ logNo } AND A.club_no = #{ clubNo }
    </select>

    <update id="addLogViews" parameterType="Integer">
        UPDATE CL_LOG
        SET views = views + 1
        WHERE log_no = #{ logNo }
    </update>

    <insert id="insertReply" parameterType="com.multi.udong.club.model.dto.ReplyDTO">
        INSERT INTO CL_LOG_REPLY
            (log_no, content, writer)
        VALUES
            (
            #{ logNo },
            #{ content },
            #{ writer.memberNo }
            )
    </insert>

    <select id="checkReplyWriter" parameterType="Integer" resultType="Integer">
        SELECT writer
        FROM CL_LOG_REPLY
        WHERE reply_no = #{ replyNo }
    </select>

    <update id="updateReply" parameterType="com.multi.udong.club.model.dto.ReplyDTO">
        UPDATE CL_LOG_REPLY
        SET
            content = #{ content }
        WHERE reply_no = #{ replyNo } AND log_no = #{ logNo }
    </update>

    <delete id="deleteReply" parameterType="com.multi.udong.club.model.dto.ReplyDTO">
        DELETE FROM CL_LOG_REPLY
        WHERE reply_no = #{ replyNo } AND log_no = #{ logNo }
    </delete>

    <select id="checkLogWriter" parameterType="Integer" resultType="Integer">
        SELECT writer
        FROM CL_LOG
        WHERE log_no = #{ logNo }
    </select>

    <select id="selectAttachment" parameterType="Integer" resultMap="attachmentResultMap">
        SELECT *
        FROM ATTACHMENT
        WHERE file_no = #{ fileNo }
    </select>

    <update id="updateLog" parameterType="com.multi.udong.club.model.dto.LogDTO">
        UPDATE CL_LOG
        SET
            title = #{ title },
            content = #{ content },
            modified_at = NOW()
        WHERE club_no = #{ clubNo } AND log_no = #{ logNo }
    </update>

    <update id="updateAttachment" parameterType="com.multi.udong.common.model.dto.AttachmentDTO">
        UPDATE ATTACHMENT
        SET
            original_name = #{ originalName },
            saved_name = #{ savedName }
        WHERE file_no = #{ fileNo } AND type_code = #{ typeCode } AND target_no = #{ targetNo }
    </update>

    <delete id="deleteAttachment" parameterType="com.multi.udong.common.model.dto.AttachmentDTO">
        DELETE FROM ATTACHMENT
        WHERE file_no = #{ fileNo } AND type_code = #{ typeCode } AND target_no = #{ targetNo }
    </delete>

    <insert id="insertAttachment" parameterType="com.multi.udong.common.model.dto.AttachmentDTO">
        INSERT INTO ATTACHMENT
            (type_code, target_no, original_name, saved_name)
        VALUES
            (
            #{ typeCode },
            #{ targetNo },
            #{ originalName },
            #{ savedName }
            )
    </insert>

    <select id="selectLogImg" parameterType="Integer" resultMap="attachmentResultMap">
        SELECT *
        FROM ATTACHMENT
        WHERE type_code = 'CL-LOG' AND target_no = #{ logNo }
    </select>

    <update id="deleteLog" parameterType="com.multi.udong.club.model.dto.LogDTO">
        UPDATE CL_LOG
        SET
            is_deleted = 'Y',
            deleted_at = NOW()
        WHERE club_no = #{ clubNo } AND log_no = #{ logNo }
    </update>

    <delete id="deleteLogImg" parameterType="Integer">
        DELETE FROM ATTACHMENT
        WHERE type_code = 'CL-LOG' AND target_no = #{ logNo }
    </delete>

    <insert id="insertLogLike" parameterType="com.multi.udong.club.model.dto.LikeDTO">
        INSERT INTO CL_LOG_LIKE
            (log_no, member_no)
        VALUES
            (
            #{ logNo },
            #{ memberNo }
            )
    </insert>

    <delete id="deleteLogLike" parameterType="com.multi.udong.club.model.dto.LikeDTO">
        DELETE FROM CL_LOG_LIKE
        WHERE log_no = #{ logNo } AND member_no = #{ memberNo }
    </delete>

    <insert id="insertReplyLike" parameterType="com.multi.udong.club.model.dto.LikeDTO">
        INSERT INTO CL_LOG_REPLY_LIKE
            (reply_no, member_no)
        VALUES
            (
            #{ replyNo },
            #{ memberNo }
            )
    </insert>

    <delete id="deleteReplyLike" parameterType="com.multi.udong.club.model.dto.LikeDTO">
        DELETE FROM CL_LOG_REPLY_LIKE
        WHERE reply_no = #{ replyNo } AND member_no = #{ memberNo }
    </delete>
    
    <select id="checkIsClubDeleted" parameterType="Integer" resultType="String">
        SELECT is_deleted
        FROM CL
        WHERE club_no = #{ clubNo }
    </select>

    <select id="checkIsLogDeleted" parameterType="Integer" resultType="String">
        SELECT is_deleted
        FROM CL_LOG
        WHERE log_no = #{ logNo }
    </select>

    <delete id="deleteClubMember" parameterType="com.multi.udong.club.model.dto.ClubMemberDTO">
        DELETE FROM CL_MEMBER
        WHERE club_no = #{ clubNo }
        <if test="memberNo != 0">
            AND member_no = #{ memberNo }
        </if>
    </delete>

    <select id="selectScheduleList" parameterType="com.multi.udong.club.model.dto.FilterDTO" resultMap="scheduleResultMap">
        SELECT
            A.schedule_no,
            A.club_no,
            A.title,
            A.content,
            (SELECT COUNT(*) FROM CL_SCHEDULE_PARTICIPANT B WHERE B.schedule_no = A.schedule_no) AS current_personnel,
            A.max_personnel,
            A.gathering_at,
            A.created_at
        FROM CL_SCHEDULE A
        WHERE A.club_no = #{ clubNo } AND A.is_deleted = 'N'
        ORDER BY A.gathering_at DESC
        LIMIT #{ startIndex }, #{ pageCount }
    </select>

    <select id="selectScheduleCount" parameterType="com.multi.udong.club.model.dto.FilterDTO" resultType="Integer">
        SELECT COUNT(*)
        FROM CL_SCHEDULE
        WHERE club_no = #{ clubNo } AND is_deleted = 'N'
    </select>

    <insert id="insertSchedule" parameterType="com.multi.udong.club.model.dto.ScheduleDTO" useGeneratedKeys="true" keyProperty="scheduleNo">
        INSERT INTO CL_SCHEDULE
            (club_no, title, content, maker, max_personnel, gathering_at)
        VALUES
            (
            #{ clubNo },
            #{ title },
            #{ content },
            #{ maker.memberNo },
            #{ maxPersonnel },
            #{ gatheringAt }
            )
    </insert>

    <insert id="insertScheduleParticipant" parameterType="com.multi.udong.club.model.dto.ScheduleDTO">
        INSERT INTO CL_SCHEDULE_PARTICIPANT
            (schedule_no, member_no)
        VALUES
            (
            #{ scheduleNo },
            #{ maker.memberNo }
            )
    </insert>

    <select id="checkIsScheduleDeleted" parameterType="Integer" resultType="String">
        SELECT is_deleted
        FROM CL_SCHEDULE
        WHERE schedule_no = #{ scheduleNo }
    </select>

    <select id="selectScheduleDetail" parameterType="com.multi.udong.club.model.dto.RequestDTO" resultMap="scheduleResultMap">
        SELECT
        cs.schedule_no,
        cs.club_no,
        cs.title,
        cs.content,
        cs.gathering_at,
        cs.created_at,
        cs.max_personnel,
        cs.deleted_at,
        cs.is_deleted,
        m.member_no AS maker,
        m.nickname AS maker_nickname,
        a.saved_name AS maker_profile_saved_name,
        COUNT(csp.member_no) AS current_personnel,
        (SELECT COUNT(*) FROM CL_SCHEDULE_PARTICIPANT csp WHERE csp.schedule_no = cs.schedule_no AND csp.member_no = #{ memberNo }) AS viewer_join
        FROM
        CL_SCHEDULE cs
        JOIN
        MEMBER m ON cs.maker = m.member_no
        LEFT JOIN
        ATTACHMENT a ON m.member_no = a.target_no AND a.type_code = 'MEM'
        LEFT JOIN
        CL_SCHEDULE_PARTICIPANT csp ON cs.schedule_no = csp.schedule_no
        WHERE
        cs.schedule_no = #{ scheduleNo } AND cs.club_no = #{ clubNo }
        GROUP BY
        cs.schedule_no,
        cs.club_no,
        cs.title,
        cs.content,
        cs.gathering_at,
        cs.created_at,
        cs.max_personnel,
        cs.deleted_at,
        cs.is_deleted,
        m.member_no,
        m.nickname,
        a.saved_name
    </select>

    <select id="selectScheduleParticipants" parameterType="com.multi.udong.club.model.dto.RequestDTO" resultMap="scheduleParticipantResultMap">
        SELECT
        m.member_no AS participant,
        m.nickname AS participant_nickname,
        a.saved_name AS participant_profile_saved_name
        FROM
        CL_SCHEDULE_PARTICIPANT csp
        JOIN
        MEMBER m ON csp.member_no = m.member_no
        LEFT JOIN
        ATTACHMENT a ON m.member_no = a.target_no AND a.type_code = 'MEM'
        WHERE
        csp.schedule_no = #{ scheduleNo }
    </select>

    <select id="checkSchedulePersonnel" parameterType="Integer" resultMap="scheduleResultMap">
        SELECT
        A.max_personnel,
        (SELECT COUNT(*) FROM CL_SCHEDULE_PARTICIPANT B WHERE B.schedule_no = A.schedule_no) AS current_personnel
        FROM CL_SCHEDULE A
        WHERE schedule_no = #{ scheduleNo }
    </select>

    <insert id="joinSchedule" parameterType="com.multi.udong.club.model.dto.RequestDTO">
        INSERT INTO CL_SCHEDULE_PARTICIPANT
            (schedule_no, member_no)
        VALUES
            (
            #{ scheduleNo },
            #{ memberNo }
            )
    </insert>

    <select id="checkScheduleJoinStatus" parameterType="com.multi.udong.club.model.dto.RequestDTO" resultType="Integer">
        SELECT COUNT(*)
        FROM CL_SCHEDULE_PARTICIPANT
        WHERE schedule_no = #{ scheduleNo } AND member_no = #{ memberNo }
    </select>

    <delete id="cancelJoinSchedule" parameterType="com.multi.udong.club.model.dto.RequestDTO">
        DELETE FROM CL_SCHEDULE_PARTICIPANT
        WHERE schedule_no = #{ scheduleNo } AND member_no = #{ memberNo }
    </delete>

    <select id="checkScheduleMaker" parameterType="Integer" resultType="Integer">
        SELECT maker
        FROM CL_SCHEDULE
        WHERE schedule_no = #{ scheduleNo }
    </select>

    <update id="deleteSchedule" parameterType="com.multi.udong.club.model.dto.RequestDTO">
        UPDATE CL_SCHEDULE
        SET
            is_deleted = 'Y',
            deleted_at = NOW()
        WHERE club_no = #{ clubNo } AND schedule_no = #{ scheduleNo }
    </update>

    <delete id="deleteScheduleParticipants" parameterType="Integer">
        DELETE FROM CL_SCHEDULE_PARTICIPANT
        WHERE schedule_no = #{ scheduleNo }
    </delete>

    <select id="selectAlbumList" parameterType="com.multi.udong.club.model.dto.RequestDTO" resultMap="attachmentResultMap">
        SELECT ATM.*, CLL.club_no
        FROM ATTACHMENT ATM
        LEFT JOIN CL_LOG CLL ON CLL.log_no = ATM.target_no
        WHERE CLL.club_no = #{ clubNo } AND CLL.is_deleted = 'N' AND ATM.type_code = 'CL-LOG'
        ORDER BY CLL.log_no DESC
        LIMIT #{ startIndex }, #{ albumPageCount }
    </select>

    <select id="selectAlbumCount" parameterType="com.multi.udong.club.model.dto.RequestDTO" resultType="Integer">
        SELECT COUNT(*)
        FROM ATTACHMENT ATM
        LEFT JOIN CL_LOG CLL ON CLL.log_no = ATM.target_no
        WHERE CLL.club_no = #{ clubNo } AND CLL.is_deleted = 'N' AND ATM.type_code = 'CL-LOG'
    </select>

    <select id="selectClubJoinRequestList" parameterType="Integer" resultMap="clubMemberResultMap">
        SELECT CM.club_no AS member_club_no, CM.member_no, CM.applied_at, CM.approved_at, M.nickname, ATM.saved_name AS profile_saved_name
        FROM CL_MEMBER CM
        LEFT JOIN MEMBER M ON M.member_no = CM.member_no
        LEFT JOIN ATTACHMENT ATM ON ATM.target_no = CM.member_no
        WHERE CM.join_status = 'W' AND ATM.type_code = 'MEM' AND CM.club_no = #{ clubNo };
    </select>

    <update id="approveJoinRequest" parameterType="com.multi.udong.club.model.dto.ClubMemberDTO">
        UPDATE CL_MEMBER
        SET
            join_status = 'Y',
            approved_at = NOW()
        WHERE club_no = #{ clubNo } AND member_no = #{ memberNo }
    </update>

    <delete id="rejectJoinRequest" parameterType="com.multi.udong.club.model.dto.ClubMemberDTO">
        DELETE FROM CL_MEMBER
        WHERE club_no = #{ clubNo } AND member_no = #{ memberNo }
    </delete>

    <select id="selectClubMemberList" parameterType="com.multi.udong.club.model.dto.FilterDTO" resultMap="clubResultMap">
        SELECT C.club_no, C.master, CM.member_no, CM.applied_at, CM.approved_at, M.nickname, ATM.saved_name AS profile_saved_name
        FROM CL C
        LEFT JOIN CL_MEMBER CM ON CM.club_no = C.club_no
        LEFT JOIN MEMBER M ON M.member_no = CM.member_no
        LEFT JOIN ATTACHMENT ATM ON ATM.target_no = CM.member_no
        WHERE CM.club_no = #{ clubNo } AND CM.join_status = 'Y' AND ATM.type_code = 'MEM'
        <if test="searchWord != null and searchWord != ''">
            AND M.nickname LIKE CONCAT('%', #{ searchWord }, '%')
        </if>
        ORDER BY CM.approved_at
        LIMIT #{ startIndex }, #{ memberPageCount }
    </select>

    <select id="selectClubMemberCount" parameterType="com.multi.udong.club.model.dto.FilterDTO" resultType="Integer">
        SELECT COUNT(*)
        FROM CL_MEMBER CM
        LEFT JOIN MEMBER M ON M.member_no = CM.member_no
        WHERE CM.join_status = 'Y' AND CM.club_no = #{ clubNo }
        <if test="searchWord != null and searchWord != ''">
            AND M.nickname LIKE CONCAT('%', #{ searchWord }, '%')
        </if>
    </select>

    <update id="delegateMaster" parameterType="com.multi.udong.club.model.dto.ClubMemberDTO">
        UPDATE CL
        SET master = #{ memberNo }
        WHERE club_no = #{ clubNo }
    </update>

    <delete id="kickMember" parameterType="com.multi.udong.club.model.dto.ClubMemberDTO">
        DELETE FROM CL_MEMBER
        WHERE club_no = #{ clubNo } AND member_no = #{ memberNo }
    </delete>

    <select id="selectMemberProfileImg" parameterType="Integer" resultType="String">
        SELECT saved_name
        FROM ATTACHMENT
        WHERE type_code = 'MEM' AND target_no = #{ memberNo }
    </select>

    <insert id="saveChat" parameterType="com.multi.udong.club.model.dto.OutputChatMessage">
        INSERT INTO CL_CHAT
        (club_no, sender_no, content, type, sent_at)
        VALUES
        (
        #{ clubNo },
        #{ senderNo },
        #{ content },
        #{ type },
        #{ sentAt }
        )
    </insert>

    <select id="selectInitialChatMessage" parameterType="Integer" resultMap="outputChatMessageResultMap">
        SELECT
            CLC.*,
            M.nickname,
            ATM.saved_name AS profile_saved_name
        FROM CL_CHAT CLC
        LEFT JOIN MEMBER M ON M.member_no = CLC.sender_no
        LEFT JOIN ATTACHMENT ATM ON ATM.type_code = 'MEM' AND ATM.target_no = CLC.sender_no
        WHERE CLC.club_no = #{ clubNo } AND CLC.type = 'chat'
        ORDER BY CLC.chat_no DESC
        LIMIT 5
    </select>

    <select id="selectOldChatMessage" parameterType="com.multi.udong.club.model.dto.RequestDTO" resultMap="outputChatMessageResultMap">
        SELECT
            CLC.*,
            M.nickname,
            ATM.saved_name AS profile_saved_name
        FROM CL_CHAT CLC
        LEFT JOIN MEMBER M ON M.member_no = CLC.sender_no
        LEFT JOIN ATTACHMENT ATM ON ATM.type_code = 'MEM' AND ATM.target_no = CLC.sender_no
        WHERE CLC.chat_no &lt; #{ minChatNo } AND CLC.club_no = #{ clubNo } AND CLC.type = 'chat'
        ORDER BY CLC.chat_no DESC
        LIMIT 10
    </select>

</mapper>