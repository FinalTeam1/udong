<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multi.udong.notification.model.dao.NotiMapper">

    <insert id="insertNoti" parameterType="java.util.List">
        INSERT INTO NOTI (receiver_no, target_href, noti_set_code, content, created_at)
        SELECT n.receiver_no, n.target_href, n.noti_set_code, n.content, n.created_at
        FROM (
            <foreach collection="list" item="noti" separator="UNION ALL">
                SELECT #{noti.receiverNo} as receiver_no,
                #{noti.targetHref} as target_href,
                #{noti.notiSetCode} as noti_set_code,
                #{noti.content} as content,
                #{noti.createdAt} as created_at
            </foreach>
        ) n
        INNER JOIN NOTI_SET ns ON n.receiver_no = ns.member_no AND n.noti_set_code = ns.noti_set_code
        WHERE ns.is_received = 'Y'
    </insert>

    <select id="getInsertedNotis" parameterType="java.util.List" resultType="notiDTO">
        SELECT n.noti_no, n.receiver_no, n.target_href, n.noti_set_code, n.content, n.created_at
        FROM NOTI n
        WHERE (n.receiver_no, n.noti_set_code, n.created_at) IN
        <foreach item="noti" collection="list" open="(" separator="," close=")">
            (#{noti.receiverNo}, #{noti.notiSetCode}, #{noti.formatCreatedAt})
        </foreach>
    </select>

    <select id="getNoti" resultType="notiDTO">
        SELECT
            noti_no AS notiNo,
            receiver_no AS receiverNo,
            target_href AS targetHref,
            noti_set_code AS notiSetCode,
            content,
            created_at AS formatCreatedAt,
            is_read AS isRead
        FROM NOTI
        WHERE receiver_no = #{receiverNo}
        ORDER BY is_read DESC, created_at ASC
    </select>

    <update id="markAsRead">
        UPDATE NOTI
        SET is_read = 'Y'
        WHERE noti_no = #{notiNo}
        AND receiver_no = #{receiverNo}
    </update>

    <update id="markAllAsRead">
        UPDATE NOTI
        SET is_read = 'Y'
        WHERE receiver_no = #{receiverNo}
        AND is_read = 'N'
    </update>

    <delete id="deleteAllReadNoti">
        DELETE FROM NOTI
        WHERE receiver_no = #{receiverNo}
        AND is_read = 'Y'
    </delete>

    <select id="getUnreadNotiCount" resultType="int">
        SELECT COUNT(*)
        FROM NOTI
        WHERE receiver_no = #{receiverNo}
        AND is_read = 'N'
    </select>

    <select id="getNotiSetByMemberNo" resultType="notiSetDTO">
        SELECT
            ns.member_no,
            ns.noti_set_code,
            ns.is_received,
            nsc.noti_set_name
        FROM NOTI_SET ns
        JOIN noti_set_code nsc ON ns.noti_set_code = nsc.noti_set_code
        WHERE ns.member_no = #{memberNo}
    </select>

    <update id="updateNotiSet" parameterType="map">
        UPDATE NOTI_SET
        SET is_received =
            CASE noti_set_code
                <foreach index="key" item="value" collection="params">
                    WHEN #{key} THEN #{value}
                </foreach>
                ELSE is_received
            END
        WHERE member_no = #{memberNo}
            AND noti_set_code IN
                <foreach item="key" collection="params.keySet()" open="(" separator="," close=")">
                    #{key}
                </foreach>
    </update>

</mapper>
