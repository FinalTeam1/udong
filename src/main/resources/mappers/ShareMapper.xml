<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ShareMapper">
    <resultMap type="ShaCatDTO" id="shaCatMap">
        <!-- 언더바가 들어가는 쿼리문에 한하여 매핑을 해줘야함 -->
        <id property="catCode" column="cat_code" />
        <result property="catName" column="cat_name" />
    </resultMap>

    <resultMap type="shaItemDTO" id="shaItemMap">
        <id property="itemNo" column="item_no" />
        <result property="itemGroup" column="item_group" />
        <result property="itemCatCode" column="item_cat_code" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="ownerNo" column="owner_no" />
        <result property="nickName" column="nickname" />
        <result property="level" column="level" />
        <result property="locCode" column="loc_code" />
        <result property="locName" column="eup_myeon_dong_name" />
        <result property="createdAt" column="created_at" />
        <result property="modifiedAt" column="modified_at" />
        <result property="expiryDate" column="expiry_date" />
        <result property="statusCode" column="status_code" />
        <result property="dealCnt" column="deal_cnt" />
        <result property="likeCnt" column="like_cnt" />
        <result property="viewCnt" column="view_cnt" />
        <result property="reqCnt" column="req_cnt" />
        <result property="deletedAt" column="deleted_at" />
        <result property="img" column="saved_name" />
    </resultMap>

    <select id="getShaCat" resultMap="shaCatMap">
        select *
        from sha_cat
        order by
        case
        when cat_code = 'OTH' then 1
        else 0
        end,
        cat_code
    </select>

    <insert id="insertItem" useGeneratedKeys="true" keyColumn="item_no" keyProperty="itemNo">
        insert into sha_items
        <choose>
            <when test="itemGroup == 'rent'">
                (item_group, item_cat_code, title, content, owner_no, loc_code)
                values
                (#{itemGroup}, #{itemCatCode}, #{title}, #{content}, #{ownerNo}, #{locCode})
            </when>
            <otherwise>
                (item_group, item_cat_code, title, content, owner_no, loc_code, expiry_date, status_code)
                values
                (#{itemGroup}, #{itemCatCode}, #{title}, #{content}, #{ownerNo}, #{locCode}, #{expiryDate}, 'GIV')
            </otherwise>
        </choose>
        <!--<if test="itemGroup == 'rent'">
            (item_group, item_cat_code, title, content, owner_no, loc_code)
            values
            (#{itemGroup}, #{itemCatCode}, #{title}, #{content}, #{ownerNo}, #{locCode})
        </if>
        <if test="itemGroup == 'give'">
            (item_group, item_cat_code, title, content, owner_no, loc_code, expiry_date, status_code)
            values
            (#{itemGroup}, #{itemCatCode}, #{title}, #{content}, #{ownerNo}, #{locCode}, #{expiryDate}, 'GIV')
        </if>-->
    </insert>

    <insert id="insertImg" >
        insert into attachment
        (type_code, target_no, original_name, saved_name)
        values
        <foreach collection="list" item="img" separator=",">
            (#{img.typeCode}, #{img.targetNo}, #{img.originalName}, #{img.savedName})
        </foreach>
    </insert>

    <select id="rentItemList" resultMap="shaItemMap">
        select a.*, c.saved_name
        from sha_items a
        left join (
        select target_no, saved_name
        from (
        select *,
        row_number() over (partition by target_no order by file_no) as rn
        from attachment
        where type_code = 'rent'
        ) sub
        where rn = 1
        ) c on a.item_no = c.target_no
        where a.loc_code = #{locCode}
        and a.item_group = 'rent'
        and a.deleted_at is null
        order by a.created_at desc
    </select>

    <select id="giveItemList" resultMap="shaItemMap">
        select a.*, c.saved_name
        from sha_items a
        left join (
        select target_no, saved_name
        from (
        select *, row_number() over (partition by target_no order by file_no) as rn
        from attachment
        where type_code = 'give'
        ) sub
        where rn = 1
        ) c on a.item_no = c.target_no
        where a.loc_code = #{locCode}
        and a.item_group = 'give'
        and a.deleted_at is null
        order by a.created_at desc
    </select>

    <select id="getItemDetail" resultMap="shaItemMap">
        select a.*, b.nickname, b.level, c.eup_myeon_dong_name, d.return_date
        from sha_items a
        inner join member b
        on a.owner_no = b.member_no
        inner join location c
        on a.loc_code = c.location_code
        left join
        (
        select *
        from sha_req
        where status_code = 'RNT'
        and req_item = #{itemNo}
        ) d
        on a.item_no = d.req_item
        where a.item_no = #{itemNo}
    </select>

    <select id="getItemImgs" resultType="attachmentDTO">
        select *
        from attachment
        where target_no = #{itemNo}
        and type_code = #{itemGroup}
    </select>

    <select id="searchItems" resultMap="shaItemMap">
        select a.*, c.saved_name
        from (
        select b.*, e.*,
        row_number() over (order by b.created_at desc) as rn
        from sha_items b
        left join member d
        on b.owner_no = d.member_no
        left join
        (
        select req_item, return_date
        from sha_req
        where status_code = 'RNT'
        ) e
        on b.item_no = e.req_item
        where b.deleted_at is null
        and d.is_deleted = 'N'
        <if test="locCode != null and locCode != ''">and b.loc_code = #{locCode}</if>
        <if test="group != null and group != ''">and b.item_group = #{group}</if>
        <if test="catCode != null and catCode != ''">and b.item_cat_code = #{catCode}</if>
        <if test="statusCode != null and statusCode != ''">and b.status_code = #{statusCode}</if>
        <if test="keyword != null and keyword != ''">and (b.title like concat('%', #{keyword}, '%') or b.content like concat('%', #{keyword}, '%')) </if>
        ) a
        left join (
        select target_no, saved_name
        from (
        select *,
        row_number() over (partition by target_no order by file_no) as rn
        from attachment
        where type_code = #{group}
        ) sub
        where rn = 1
        ) c
        on a.item_no = c.target_no
        where a.rn between #{start} and #{end}
        order by a.rn
    </select>

    <select id="getItemCounts" resultType="Integer">
        select count(*)
        from sha_items a
        left join member b
        on a.owner_no = b.member_no
        where a.deleted_at is null
        and b.is_deleted = 'N'
        <if test="locCode != null and locCode != ''">and a.loc_code = #{locCode}</if>
        <if test="group != null and group != ''">and a.item_group = #{group}</if>
        <if test="catCode != null and catCode != ''">and a.item_cat_code = #{catCode}</if>
        <if test="statusCode != null and statusCode != ''">and a.status_code = #{statusCode}</if>
        <if test="keyword != null and keyword != ''">and (a.title like concat('%', #{keyword}, '%') or a.content like concat('%', #{keyword}, '%')) </if>
    </select>

    <insert id="insertRequest">
        insert into sha_req
        <choose>
            <when test="reqGroup == 'rent'">
                (req_item, rqst_no, return_date)
                values
                (#{reqItem}, #{rqstNo}, #{returnDate})
            </when>
            <otherwise>
                (req_item, rqst_no)
                values
                (#{reqItem}, #{rqstNo})
            </otherwise>
        </choose>
    </insert>

    <select id="findRequest" resultType="shaReqDTO">
        select *
        from sha_req
        where req_item = #{reqItem}
        <if test="rqstNo != null and rqstNo != ''">
            and rqst_no = #{rqstNo}
        </if>
        <if test="statusCode != null and statusCode != ''">
            and status_code = #{statusCode}
        </if>
    </select>

    <update id="updateItem">
        update sha_items
        set
        item_cat_code = #{itemCatCode},
        title = #{title},
        content = #{content},
        modified_at = now()
        where item_no = #{itemNo}
    </update>

    <delete id="deleteImgList">
        delete
        from attachment
        <foreach collection="list" item="img" separator=",">
            where file_no = #{img.fileNo}
        </foreach>
    </delete>

    <delete id="deleteItem">
        delete
        from sha_items
        where item_no = #{itemNo}
    </delete>

    <delete id="deleteImgByTarget">
        delete
        from attachment
        where target_no = #{targetNo}
        and type_code = #{typeCode}
    </delete>

    <update id="updateItStat">
        update sha_items
        set
        status_code = #{statusCode},
        modified_at = now()
        where item_no = #{itemNo}
    </update>

    <update id="plusViewCnt">
        update sha_items
        set
        view_cnt = view_cnt + 1
        where item_no = #{itemNo}
    </update>

    <select id="getShaLike" resultType="shaLikeDTO">
        select *
        from sha_like
        where member_no = #{memberNo}
        <if test="itemNo != null and itemNo != ''">
            and item_no = #{itemNo}
        </if>
    </select>

    <insert id="insertShaLike">
        insert
        into sha_like
        (member_no, item_no)
        values (#{memberNo}, #{itemNo})
    </insert>

    <delete id="deleteShaLike">
        delete
        from sha_like
        where member_no = #{memberNo}
        and item_no = #{itemNo}
    </delete>

    <update id="plusLikeCnt">
        update sha_items
        set
        like_cnt = like_cnt + 1
        where item_no = #{itemNo}
    </update>

    <update id="minusLikeCnt">
        update sha_items
        set
        like_cnt = like_cnt - 1
        where item_no = #{itemNo}
    </update>

    <update id="plusReqCnt">
        update sha_items
        set
        req_cnt = req_cnt + 1
        where item_no = #{itemNo}
    </update>

</mapper>
