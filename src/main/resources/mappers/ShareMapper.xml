<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ShareMapper">

    <resultMap type="shaItemDTO" id="shaItemMap">
        <id property="itemNo" column="item_no"/>
        <result property="itemGroup" column="item_group"/>
        <result property="itemCatName" column="cat_name"/>
        <result property="itemCatCode" column="item_cat_code"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="ownerNo" column="owner_no"/>
        <result property="ownerImg" column="owner_img"/>
        <result property="nickName" column="nickname"/>
        <result property="level" column="level"/>
        <result property="locCode" column="loc_code"/>
        <result property="locName" column="eup_myeon_dong_name"/>
        <result property="createdAt" column="created_at"/>
        <result property="modifiedAt" column="modified_at"/>
        <result property="expiryDate" column="expiry_date"/>
        <result property="statusCode" column="status_code"/>
        <result property="statusName" column="status_name"/>
        <result property="dealCnt" column="deal_cnt"/>
        <result property="likeCnt" column="like_cnt"/>
        <result property="viewCnt" column="view_cnt"/>
        <result property="reqCnt" column="req_cnt"/>
        <result property="deletedAt" column="deleted_at"/>
        <result property="img" column="saved_name"/>
        <result property="rqstNickname" column="rqst_nickname"/>
    </resultMap>

    <resultMap id="shaReqMap" type="shaReqDTO">
        <id property="reqNo" column="req_no"/>
        <result property="reqItem" column="req_item"/>
        <result property="ownerNo" column="owner_no"/>
        <result property="ownerNickname" column="owner_nickname"/>
        <result property="rqstNo" column="rqst_no"/>
        <result property="rqstNickname" column="nickname"/>
        <result property="rqstImg" column="rqst_img"/>
        <result property="rqstLevel" column="rqst_level"/>
        <result property="createdAt" column="req_created_at"/>
        <result property="modifiedAt" column="req_modified_at"/>
        <result property="returnDate" column="return_date"/>
        <result property="statusCode" column="req_status_code"/>
        <result property="statusName" column="status_name"/>
        <association property="itemDTO" javaType="shaItemDTO" resultMap="shaItemMap"/>
    </resultMap>

    <select id="getShaCat" resultType="shaCatDTO">
        select *
        from sha_cat
        order by
        case
        when cat_code = 'OTH' then 1
        else 0
        end,
        cat_code
    </select>

    <insert id="insertItem" useGeneratedKeys="true" keyColumn="item_no" keyProperty="itemNo">
        insert into sha_items
        <choose>
            <when test="itemGroup == 'rent'">
                (item_group, item_cat_code, title, content, owner_no, loc_code)
                values
                (#{itemGroup}, #{itemCatCode}, #{title}, #{content}, #{ownerNo}, #{locCode})
            </when>
            <otherwise>
                (item_group, item_cat_code, title, content, owner_no, loc_code, expiry_date, status_code)
                values
                (#{itemGroup}, #{itemCatCode}, #{title}, #{content}, #{ownerNo}, #{locCode}, #{expiryDate}, 'GIV')
            </otherwise>
        </choose>
    </insert>

    <insert id="insertImg">
        insert into attachment
        (type_code, target_no, original_name, saved_name)
        values
        <foreach collection="list" item="img" separator=",">
            (#{img.typeCode}, #{img.targetNo}, #{img.originalName}, #{img.savedName})
        </foreach>
    </insert>

    <select id="getItemDetailForCheck" resultType="shaItemDTO">
        select *
        from sha_items
        where item_no = #{itemNo}
    </select>

    <select id="getItemDetail" resultMap="shaItemMap">
        select a.*, b.nickname, b.is_deleted, b.level, c.eup_myeon_dong_name, d.*, e.cat_name, f.saved_name, g.status_name, h.owner_img
        from sha_items a
        left join
        member b
        on a.owner_no = b.member_no
        left join
        (
        select target_no, saved_name as owner_img
        from attachment
        where type_code = 'MEM'
        ) h
        on h.target_no = a.owner_no
        inner join
        location c
        on a.loc_code = c.location_code
        left join
        (
        select req_item, return_date, nickname as rqst_nickname
        from sha_req
        inner join
        member
        on rqst_no = member_no
        where status_code in ('RNT', 'WIN')
        ) d
        on a.item_no = d.req_item
        left join
        sha_cat e
        on a.item_cat_code = e.cat_code
        left join
        (
        select target_no, saved_name, type_code
        from
        (
        select *,
        row_number() over (partition by target_no order by file_no) as rn
        from attachment
        ) sub
        where rn = 1
        ) f
        on a.item_no = f.target_no
        and a.item_group = f.type_code
        left join
        sha_status g
        on a.status_code = g.status_code
        where a.item_no = #{itemNo}
        and b.is_deleted = 'N'
    </select>

    <select id="getItemImgs" resultType="attachmentDTO">
        select *
        from attachment
        where target_no = #{itemNo}
        and type_code = #{itemGroup}
    </select>

    <select id="searchItems" resultMap="shaItemMap">
        select a.*, c.saved_name
        from
        (
        select b.*, e.*, f.eup_myeon_dong_name, g.cat_name,
        row_number() over (order by b.created_at desc) as rn
        from sha_items b
        inner join
        location f
        on b.loc_code = f.location_code
        left join member d
        on b.owner_no = d.member_no
        left join
        (
        select req_item, return_date, rqst_no, nickname as rqst_nickname
        from sha_req
        left join
        member
        on rqst_no = member_no
        where status_code in ('RNT', 'WIN')
        ) e
        on b.item_no = e.req_item
        left join
        sha_cat g
        on b.item_cat_code = g.cat_code
        where b.deleted_at is null
        and d.is_deleted = 'N'
        <if test="locCode != null and locCode != ''">and b.loc_code = #{locCode}</if>
        <if test="group != null and group != ''">and b.item_group = #{group}</if>
        <if test="catCode != null and catCode != ''">and b.item_cat_code = #{catCode}</if>
        <if test="statusCode != null and statusCode != ''">and b.status_code = #{statusCode}</if>
        <if test="keyword != null and keyword != ''">and (b.title like concat('%', #{keyword}, '%') or b.content like
            concat('%', #{keyword}, '%'))
        </if>
        ) a
        left join
        (
        select target_no, saved_name, type_code
        from
        (
        select *,
        row_number() over (partition by target_no order by file_no) as rn
        from attachment
        ) sub
        where rn = 1
        ) c
        on a.item_no = c.target_no
        and a.item_group = c.type_code
        where a.rn between #{start} and #{end}
        order by a.rn
    </select>

    <select id="getItemCounts" resultType="Integer">
        select count(*)
        from sha_items a
        left join member b
        on a.owner_no = b.member_no
        where a.deleted_at is null
        and b.is_deleted = 'N'
        <if test="locCode != null and locCode != ''">and a.loc_code = #{locCode}</if>
        <if test="group != null and group != ''">and a.item_group = #{group}</if>
        <if test="catCode != null and catCode != ''">and a.item_cat_code = #{catCode}</if>
        <if test="statusCode != null and statusCode != ''">and a.status_code = #{statusCode}</if>
        <if test="keyword != null and keyword != ''">and (a.title like concat('%', #{keyword}, '%') or a.content like
            concat('%', #{keyword}, '%'))
        </if>
    </select>

    <insert id="insertRequest">
        insert into sha_req
        <choose>
            <when test="reqGroup == 'rent'">
                (req_item, rqst_no, return_date)
                values
                (#{reqItem}, #{rqstNo}, #{returnDate})
            </when>
            <otherwise>
                (req_item, rqst_no)
                values
                (#{reqItem}, #{rqstNo})
            </otherwise>
        </choose>
    </insert>

    <select id="findRequest" resultMap="shaReqMap">
        select
        a.req_no, a.req_item, a.rqst_no, a.created_at as req_created_at, a.modified_at as req_modified_at,
        a.return_date, a.status_code as req_status_code, b.nickname, c.owner_no, c.*, d.nickname as owner_nickname
        from sha_req a
        left join
        member b
        on a.rqst_no = b.member_no
        left join
        sha_items c
        on a.req_item = c.item_no
        left join
        member d
        on c.owner_no = d.member_no
        where 1=1
        <if test="reqNo != 0 and reqNo != ''">
            and req_no = #{reqNo}
        </if>
        <if test="reqItem != 0 and reqItem != ''">
            and req_item = #{reqItem}
        </if>
        <if test="rqstNo != 0 and rqstNo != ''">
            and a.rqst_no = #{rqstNo}
        </if>
        <if test="statusCode != null and statusCode != ''">
            and a.status_code = #{statusCode}
        </if>


    </select>

    <update id="updateItem">
        update sha_items
        set
        item_cat_code = #{itemCatCode},
        title = #{title},
        content = #{content},
        modified_at = now()
        where item_no = #{itemNo}
    </update>

    <delete id="deleteImgList">
        delete
        from attachment
        where file_no in
        <foreach collection="list" item="img" open="(" separator="," close=")">
            #{img.fileNo}
        </foreach>
    </delete>

    <update id="deleteItem">
        update
        sha_items
        set deleted_at = now()
        where item_no = #{itemNo}
    </update>

    <delete id="deleteImgByTarget">
        delete
        from attachment
        where target_no = #{targetNo}
        and type_code = #{typeCode}
    </delete>

    <update id="updateItStat">
        update sha_items
        set
        status_code = #{statusCode},
        modified_at = now()
        where item_no = #{itemNo}
    </update>

    <update id="plusViewCnt">
        update sha_items
        set
        view_cnt = view_cnt + 1
        where item_no = #{itemNo}
    </update>

    <select id="getShaLike" resultType="shaLikeDTO">
        select *
        from sha_like
        where member_no = #{memberNo}
        <if test="itemNo != 0 and itemNo != ''">
            and item_no = #{itemNo}
        </if>
    </select>

    <insert id="insertShaLike">
        insert
        into sha_like
        (member_no, item_no)
        values (#{memberNo}, #{itemNo})
    </insert>

    <delete id="deleteShaLike">
        delete
        from sha_like
        where member_no = #{memberNo}
        and item_no = #{itemNo}
    </delete>

    <update id="plusLikeCnt">
        update sha_items
        set
        like_cnt = like_cnt + 1
        where item_no = #{itemNo}
    </update>

    <update id="minusLikeCnt">
        update sha_items
        set
        like_cnt = like_cnt - 1
        where item_no = #{itemNo}
    </update>

    <update id="plusReqCnt">
        update sha_items
        set
        req_cnt = req_cnt + 1
        where item_no = #{itemNo}
    </update>

    <update id="minusReqCnt">
        update sha_items
        set
        req_cnt = req_cnt - 1
        where item_no = #{itemNo}
    </update>

    <update id="plusDealCnt">
        update
        sha_items
        set
        deal_cnt = deal_cnt + 1
        where item_no = #{itemNo}
    </update>

    <select id="getLendList" resultMap="shaItemMap">
        select a.*, c.saved_name, e.status_name
        from
        (
        select b.*, e.*, d.nickname, f.eup_myeon_dong_name, g.cat_name,
        row_number() over (order by b.created_at desc) as rn
        from sha_items b
        left join
        member d
        on b.owner_no = d.member_no
        inner join
        location f
        on b.loc_code = f.location_code
        left join
        (
        select req_item, return_date, rqst_no, nickname as rqst_nickname
        from sha_req
        left join
        member
        on rqst_no = member_no
        where status_code in ('RNT', 'WIN')
        ) e
        on b.item_no = e.req_item
        left join
        sha_cat g
        on b.item_cat_code = g.cat_code
        where b.deleted_at is null
        and d.is_deleted = 'N'
        <if test="ownerNo != null and ownerNo != 0">and b.owner_no = #{ownerNo}</if>
        <if test="catCode != null and catCode != ''">and b.item_cat_code = #{catCode}</if>
        <if test="group != null and group != ''">and b.item_group = #{group}</if>
        <if test="statusCode != null and statusCode != ''">and b.status_code = #{statusCode}</if>
        <if test="keyword != null and keyword != ''">and (b.title like concat('%', #{keyword}, '%') or b.content like
            concat('%', #{keyword}, '%'))
        </if>
        ) a
        left join
        (
        select target_no, saved_name, type_code
        from
        (
        select *,
        row_number() over (partition by target_no order by file_no) as rn
        from attachment
        ) sub
        where rn = 1
        ) c
        on a.item_no = c.target_no
        and a.item_group = c.type_code
        left join
        sha_status e
        on a.status_code = e.status_code
        where a.rn between #{start} and #{end}
        order by a.rn
    </select>

    <select id="getLendCounts" resultType="Integer">
        select count(*)
        from sha_items a
        join member b
        on a.owner_no = b.member_no
        where a.deleted_at is null
        and b.is_deleted = 'N'
        <if test="ownerNo != null and ownerNo != 0">and a.owner_no = #{ownerNo}</if>
        <if test="catCode != null and catCode != ''">and a.item_cat_code = #{catCode}</if>
        <if test="group != null and group != ''">and a.item_group = #{group}</if>
        <if test="statusCode != null and statusCode != ''">and a.status_code = #{statusCode}</if>
        <if test="keyword != null and keyword != ''">and (a.title like concat('%', #{keyword}, '%') or a.content like
            concat('%', #{keyword}, '%'))
        </if>
    </select>

    <select id="getReqCounts" resultType="Integer">
        select count(*)
        from sha_req a
        join
        sha_items b
        on a.req_item = b.item_no
        left join
        member c
        on b.owner_no = c.member_no
        where b.deleted_at is null
        and c.is_deleted = 'N'
        <if test="rqstNo != null and rqstNo != 0">and rqst_no = #{rqstNo}</if>
        <if test="catCode != null and catCode != ''">and b.item_cat_code = #{catCode}</if>
        <if test="group != null and group != ''">and b.item_group = #{group}</if>
        <if test="statusCode != null and statusCode != ''">and a.status_code = #{statusCode}</if>
        <if test="keyword != null and keyword != ''">and (b.title like concat('%', #{keyword}, '%') or b.content like
            concat('%', #{keyword}, '%'))
        </if>
    </select>

    <select id="getReqList" resultMap="shaReqMap">
        select a.*, e.status_name
        from
        (
        select
        g.req_no, g.req_item, g.rqst_no, g.created_at as req_created_at, g.modified_at as req_modified_at,
        g.return_date, g.status_code as req_status_code, d.*, i.nickname as nickname,
        row_number() over (order by g.created_at desc) as rn
        from
        sha_req g
        left join
        member i
        on g.rqst_no = i.member_no
        left join
        (
        select
        b.*, c.saved_name, f.cat_name, h.nickname as owner_nickname, h.is_deleted, j.eup_myeon_dong_name
        from
        sha_items b
        left join
        (
        select target_no, type_code, saved_name
        from
        (
        select *,
        row_number() over (partition by target_no order by file_no) as rn
        from attachment
        ) sub
        where rn = 1
        ) c
        on b.item_no = c.target_no and b.item_group = c.type_code
        left join
        sha_cat f
        on b.item_cat_code = f.cat_code
        left join
        member h
        on b.owner_no = h.member_no
        left join
        location j
        on b.loc_code = j.location_code
        ) d
        on g.req_item = d.item_no
        where
        d.deleted_at is null
        and d.is_deleted = 'N'
        <if test="rqstNo != null and rqstNo != 0">and rqst_no = #{rqstNo}</if>
        <if test="catCode != null and catCode != ''">and d.item_cat_code = #{catCode}</if>
        <if test="group != null and group != ''">and d.item_group = #{group}</if>
        <if test="itemNo != 0 and itemNo != ''">and g.reqItem = #{itemNo}</if>
        <if test="statusCode != null and statusCode != ''">and g.status_code = #{statusCode}</if>
        <if test="keyword != null and keyword != ''">and (d.title like concat('%', #{keyword}, '%') or d.content like
            concat('%', #{keyword}, '%'))
        </if>
        ) a
        left join
        sha_status e
        on a.req_status_code = e.status_code
        where a.rn between #{start} and #{end}
        order by a.rn
    </select>

    <select id="getRequesters" resultType="com.multi.udong.share.model.dto.ShaRqstDTO">
        select
        a.req_no, a.req_item, a.rqst_no, b.nickname as rqst_nickname, b.level as rqst_level, d.rqst_img, a.return_date, a.created_at as req_created_at, ifnull(c.end_req_cnt, 0) as end_req_cnt, ifnull(e.avg_rating, 0) as avg_rating
        from sha_req a
        left join
        member b
        on a.rqst_no = b.member_no
        left join
        (
        select rqst_no, count(*) as end_req_cnt
        from sha_req
        where
        status_code in ('RTR', 'REV')
        group by rqst_no
        ) c
        on a.rqst_no = c.rqst_no
        left join
        (
        select target_no, saved_name as rqst_img
        from attachment
        where type_code = 'MEM'
        ) d
        on a.rqst_no = target_no
        left join
        (
        select eve_no, avg(rating) as avg_rating
        from sha_eval
        group by eve_no
        ) e
        on a.rqst_no = e.eve_no
        where a.req_item = #{reqItem}
        and a.status_code = 'RQD'
    </select>

    <update id="updateReqStat">
        update
        sha_req
        set
        status_code = #{statusCode},
        return_date = #{returnDate}
        where req_no = #{reqNo}
    </update>

    <insert id="insertEval">
        insert into
        sha_eval
        (req_no, evr_no, eve_no, rating)
        values
        (#{reqNo}, #{evrNo}, #{eveNo}, #{rating})
    </insert>

    <select id="getReqByReqNo" resultType="shaReqDTO">
        select a.*, b.owner_no
        from sha_req a
        left join
        sha_items b
        on a.req_item = b.item_no
        where req_no = #{reqNo}
    </select>

    <delete id="deleteReq">
        delete
        from sha_req
        where req_no = #{reqNo}
    </delete>

    <insert id="insertReport">
        insert
        into adm_report
        (type_code, reported_no, reported_member, reporter_member, reason, url)
        values
        (#{typeCode}, #{reportedNo}, #{reportedMember}, #{reporterMember}, #{reason}, #{url})
    </insert>

    <select id="getRaffleItem" resultType="shaItemDTO">
        select *
        from sha_items
        where item_group = 'give'
        and expiry_date = curdate();
    </select>

    <update id="updateReqAfterRaffle">
        update
        sha_req
        set
        status_code = case
        when req_no = #{reqNo} then 'WIN'
        else 'LST' end
        where req_item = #{reqItem}
    </update>

    <update id="postponeExpiry">
        update
        sha_items
        set
        expiry_date = date_add(expiry_date, interval 7 day)
        where
        item_no = #{itemNo}
    </update>

    <select id="getCatsInMemReq" resultType="shaCatDTO">
        select distinct c.cat_code, c.cat_name
        from sha_req a
        left join
        sha_items b
        on a.req_item = b.item_no
        left join
        sha_cat c
        on b.item_cat_code = c.cat_code
        where rqst_no = #{memberNo}
    </select>

    <update id="updateScore">
        update
        member
        set score = score + #{rating}
        where member_no = #{eveNo}

        <selectKey resultType="int" keyProperty="totalScore" order="AFTER">
            select score
            from member
            where member_no = #{eveNo}
        </selectKey>
    </update>

    <update id="updateLevel">
        update
        member a
        join
        sha_level b
        on #{totalScore} between b.min_score and b.max_score
        set a.level = b.level_no
        where a.member_no = #{eveNo}
    </update>

    <select id="getMemberItemPreferences" resultType="com.multi.udong.share.model.dto.MemberItemPreferenceDTO">
        select a.member_no, a.item_no, 1.0 as preference
        from sha_like a
        join
        sha_items b
        on a.item_no = b.item_no
        join
        member d
        on b.owner_no = d.member_no
        where b.item_group = 'rent'
        and b.deleted_at is null
        and d.is_deleted = 'N'
        <if test="locationCode != null and locationCode != 0">
            and b.loc_code = #{locationCode}
        </if>
        union all
        select rqst_no as member_no, req_item as item_no, 2.0 as preference
        from sha_req c
        join
        sha_items b
        on c.req_item = b.item_no
        join
        member d
        on b.owner_no = d.member_no
        where b.item_group = 'rent'
        and b.deleted_at is null
        and d.is_deleted = 'N'
        <if test="locationCode != null and locationCode != 0">
            and b.loc_code = #{locationCode}
        </if>
    </select>

    <select id="getAddRecomItems" resultType="int">
        select item_no
        from sha_items a
        left join
        member b
        on a.owner_no = b.member_no
        where
        a.deleted_at is null
        and b.is_deleted = 'N'
        and a.item_group = 'rent'
        and a.loc_code = #{locationCode}
        <if test="excludedItems != null and excludedItems.size() > 0">
        and a.item_no not in
            <foreach collection="excludedItems" item="itemNo" open="(" separator="," close=")">
                #{itemNo}
            </foreach>
        </if>
        order by
            (a.like_cnt * 0.3) +
            (a.req_cnt * 0.3) +
            (a.deal_cnt * 0.1) +
            (a.view_cnt * 0.1) +
            (datediff(now(), a.created_at) * -0.1) +
            (rand() * 0.1) desc
        limit #{limit}
    </select>

    <select id="getItemListByItemNums" resultMap="shaItemMap">
        select a.*, b.cat_name as item_cat_name, c.nickname, d.eup_myeon_dong_name,
        e.*, f.saved_name
        from sha_items a
        left join
        sha_cat b
        on a.item_cat_code = b.cat_code
        left join
        member c
        on a.owner_no = c.member_no
        left join
        location d
        on a.loc_code = d.location_code
        left join
        (
        select req_item, return_date, rqst_no, nickname as rqst_nickname
        from sha_req
        left join
        member
        on rqst_no = member_no
        where status_code = 'RNT'
        ) e
        on a.item_no = e.req_item
        left join
        (
        select target_no, type_code, saved_name
        from
        (
        select *,
        row_number() over (partition by target_no order by file_no) as rn
        from attachment
        ) sub
        where rn = 1
        ) f
        on a.item_no = f.target_no and a.item_group = f.type_code
        where item_no in
        <foreach collection="list" item="itemNo" open="(" separator="," close=")">
            #{itemNo}
        </foreach>
        and a.deleted_at is null
        and c.is_deleted = 'N'
    </select>

    <update id="updateReqReturnDate">
        update
        sha_req
        set return_date = #{returnDate}
        where req_no = #{reqNo}
    </update>



</mapper>
